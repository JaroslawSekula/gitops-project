---
- name: Configure BastionHost instance for Jenkins
  hosts: localhost
  connection: local
  become: yes

  vars:
    jenkins_version: "2.504.1"
    ssh_private_key_param: "ssh_private_key"

  tasks:
    - name: Update system packages
      yum:
        name: "*"
        state: latest

    - name: Fetch SSH private key and write it directly to id_rsa
      shell: |
        aws ssm get-parameter \
          --name {{ ssh_private_key_param }} \
          --with-decryption \
          --output text \
          --query Parameter.Value \
        > /home/ec2-user/.ssh/id_rsa && \
        chown ec2-user:ec2-user /home/ec2-user/.ssh/id_rsa && \
        chmod 600 /home/ec2-user/.ssh/id_rsa

        aws ssm get-parameter \
          --name {{ ssh_private_key_param }} \
          --with-decryption \
          --output text \
          --query Parameter.Value \
        > /root/.ssh/id_rsa && \
        chown root:root /root/.ssh/id_rsa && \
        chmod 600 /root/.ssh/id_rsa
      args:
        executable: /bin/bash


    - name: Add Jenkins repo
      get_url:
        url: https://pkg.jenkins.io/redhat-stable/jenkins.repo
        dest: /etc/yum.repos.d/jenkins.repo

    - name: Import Jenkins GPG key
      rpm_key:
        state: present
        key: https://pkg.jenkins.io/redhat-stable/jenkins.io-2023.key

    - name: Install Java and Jenkins
      yum:
        name:
          - java-21-amazon-corretto-devel
          - jenkins
        state: present
        update_cache: yes

    - name: Configure Jenkins to skip setup wizard
      lineinfile:
        path: /etc/sysconfig/jenkins
        line: 'JENKINS_JAVA_OPTIONS="-Djenkins.install.runSetupWizard=false"'
        create: yes

    - name: Create Jenkins setup state files
      copy:
        dest: "/var/lib/jenkins/{{ item.path }}"
        content: "{{ jenkins_version }}"
        owner: jenkins
        group: jenkins
        mode: '0644'
      with_items:
        - { path: "jenkins.install.UpgradeWizard.state" }
        - { path: "jenkins.install.InstallUtil.lastExecVersion" }

    - name: Ensure init.groovy.d directory exists
      file:
        path: /var/lib/jenkins/init.groovy.d
        state: directory
        owner: jenkins
        group: jenkins
        mode: '0755'

    - name: Make dynamic inventory executable
      file:
        path: /home/ec2-user/gitops-project/ansible/dynamic_inventory.sh
        mode: '0755'

    - name: Copy Groovy scripts to Jenkins
      copy:
        src: /home/ec2-user/gitops-project/jenkins/scripts/
        dest: /var/lib/jenkins/init.groovy.d/
        owner: jenkins
        group: jenkins
        mode: '0644'
        remote_src: yes

    - name: Reload systemd daemon
      command: systemctl daemon-reexec

    - name: Start and enable Jenkins
      systemd:
        name: jenkins
        enabled: yes
        state: started
